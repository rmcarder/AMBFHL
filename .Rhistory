setwd("C:/Users/rcarder/Wellspring Philanthropic Fund/Data and Reports - Documents/Lookup Tables")
GeoLookupTable<-read.csv("GeoLookupTable.csv", stringsAsFactors = FALSE)
USGeoLookupTable<-read.csv("USGeoLookupTable.csv", stringsAsFactors = FALSE)
OutcomeLookupTable<-read.csv("OutcomeLookupTable.csv", stringsAsFactors = FALSE)
FiveYearPlan<-read.csv("FiveYearPlan.csv", stringsAsFactors = FALSE)
womensFunds<-read.csv("womensfunds.csv", stringsAsFactors = FALSE)
setwd("C:/Users/rcarder/Documents/dev/wpf/Quarterly")
##Install Packages once
#install.packages('dplyr')
#install.packages('gridExtra')
#install.packages('grid')
#install.packages('RGraphics')
#install.packages('reshape')
#install.packages('tidyr')
#install.packages('viridis')
#install.packages('heatmaply')
#install.packages('ggrepel')
#install.packages('formattable')
#install.packages('extrafont')
#install.packages('RJSONIO')
#install.packages('scales')
#install.packages('shiny')
#install.packages('ggmap')
#install.packages('treemap')ll.packages('RODBC')
#install.packages('RODBC')
#install.packages('scales')
#install.packages('ggalluvial')
#install.packages('waffle')
#install.packages('alluvial')
#install_github("Rttf2pt1", "wch")
#install_github("extrafont", "wch")
# install.packages("directlabels")
#install.packages("DescTools")
#install.packages("fitdistrplus")
#devtools::install_github("UrbanInstitute/urbnmapr")
#install.packages("tibble")
#install.packages("rworldmap")
library(RODBC)           # Provides database connectivity
library(dplyr)           # only used for nice format of Head() function here
library(gridExtra)
library(forcats)
library(grid)
library(DescTools)
library(devtools)
library(fitdistrplus)
library(RGraphics)
library(ggforce) # for 'geom_arc_bar'
library(reshape)
library(stringr)
library(tidyr)
library(timeDate)
library(lubridate)
library(RJSONIO)
library(maps)
library(mapdata)
library(geosphere)
library(ggmap)
library(ggplot2)
library(tools)
library(mapplots)
library(viridis)
library(ggrepel)
library(formattable)
library(extrafont)
library(alluvial)
library(ggalluvial)
library(waffle)
library(directlabels)
library(urbnmapr)
library(rworldmap)
font_import()
fonts()
loadfonts()
Sys.setenv(R_GSCMD ="C:/Program Files (x86)/gs/gs9.23/bin/gswin32c.exe")
options(scipen=999)#Disables scientific notation
#Approved Grants only?
approved=FALSE
#Set Date filter and Options
dateType='GrantFiscalYear'
dateEquality='='
#date='2012-07-27'
date='1992'
Qstart='2017-12-01'
Qend='2018-11-30'
percent <- function(x, digits = 2, format = "f", ...) {
paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
}
# The Connection string comes from the Azure ODBC text box
connectionString <- "Driver={SQL Server Native Client 11.0};Server=tcp:gd-useas-mssql-bi01.database.windows.net,1433;Database=Wellspring-PRD-BI;Uid=BIReader;Pwd=7twm2ZghNQPyjJNq;Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;"
#Open your RODBC connection
myconn <- odbcDriverConnect(connectionString)
##Filter requests by disposition date and HasAttribs by the earliest CreateDate in selected Requests to minimize data intake
sqlQuery_requests_2017 <- paste("SELECT * FROM Requests
WHERE", dateType,">'", date,"'
ORDER BY GrantAmount DESC;", sep=' ')
requests_2017 <- sqlQuery(myconn, sqlQuery_requests_2017,stringsAsFactors=FALSE)
minDate<-paste(min(requests_2017$CreateDate),sep='')
##Select Full Tables (except for HasAttribs which is filtered by above to only the ones needed)
sqlQuery_HasAttribs <- paste("SELECT * FROM HasAttribs WHERE CreateDate >=","'",minDate,"'", sep='')
sqlQuery_Attribs <- "SELECT * FROM Attribs"
sqlQuery_AttribTypes <- "SELECT * FROM AttribTypes"
sqlQuery_Organizations <- "SELECT * FROM Organizations"
sqlQuery_OrganizationBudgets<-"SELECT * FROM BudgetYears"
sqlQuery_Statuses <- "SELECT * FROM Statuses"
sqlQuery_HasContact <- "SELECT * FROM HasContact"
sqlQuery_Addresses <- "SELECT * FROM Addresses"
sqlQuery_RequestAddresses <- "SELECT * FROM RequestAddresses"
sqlQuery_Contacts <- "SELECT * FROM Contacts"
sqlQuery_EmailAddresses <- "SELECT * FROM EmailAddresses"
sqlQuery_Payments <- "SELECT * FROM Payments"
sqlQuery_Type <- "SELECT * FROM TransactionTypes"
sqlQuery_Budget <- "SELECT * FROM BudgetAllocations"
sqlQuery_FY <- "SELECT * FROM FiscalYears"
sqlQuery_Regions <- "SELECT * FROM Regions"
#sqlQuery_Descriptions <- "SELECT * FROM Descriptions"
#sqlQuery_Documents <- "SELECT * FROM Documents"
##Store tables as dataframes
HasAttribs_Raw <- sqlQuery(myconn, sqlQuery_HasAttribs,stringsAsFactors=FALSE)
Attribs_Raw <- sqlQuery(myconn, sqlQuery_Attribs,stringsAsFactors=FALSE)
AttribTypes_Raw <- sqlQuery(myconn, sqlQuery_AttribTypes,stringsAsFactors=FALSE)
Organizations_Raw <- sqlQuery(myconn, sqlQuery_Organizations,stringsAsFactors=FALSE)
OrganizationBudgets_Raw <- sqlQuery(myconn, sqlQuery_OrganizationBudgets,stringsAsFactors=FALSE)
Statuses_Raw <- sqlQuery(myconn, sqlQuery_Statuses,stringsAsFactors=FALSE)
HasContact_Raw <- sqlQuery(myconn, sqlQuery_HasContact,stringsAsFactors=FALSE)
Addresses_Raw <- sqlQuery(myconn, sqlQuery_Addresses,stringsAsFactors=FALSE)
RequestAddresses_Raw <- sqlQuery(myconn, sqlQuery_RequestAddresses,stringsAsFactors=FALSE)
Contacts_Raw <- sqlQuery(myconn, sqlQuery_Contacts,stringsAsFactors=FALSE)
EmailAddresses_Raw <- sqlQuery(myconn, sqlQuery_EmailAddresses,stringsAsFactors=FALSE)
Payments_Raw <- sqlQuery(myconn, sqlQuery_Payments,stringsAsFactors=FALSE)
Types_Raw <- sqlQuery(myconn, sqlQuery_Type,stringsAsFactors=FALSE)
Budgets_Raw <- sqlQuery(myconn, sqlQuery_Budget,stringsAsFactors=FALSE)
FY <- sqlQuery(myconn, sqlQuery_FY,stringsAsFactors=FALSE)
Regions <- sqlQuery(myconn, sqlQuery_Regions,stringsAsFactors=FALSE)
##Budget Spreads
Budgets<-left_join(Budgets_Raw,FY,by="FiscalYearId")
Budgets$Year<-paste("Budget",Budgets$Year,sep='')
BudgetsCast<-Budgets %>%
group_by(AttribId2, Year)%>%
summarize(Amount=mean(Amount))%>%
spread(Year,Amount,convert=TRUE)
install.packages('dplyr')
install.packages('gridExtra')
install.packages('grid')
install.packages('RGraphics')
install.packages('reshape')
install.packages('tidyr')
install.packages('viridis')
install.packages('heatmaply')
install.packages('ggrepel')
install.packages('formattable')
title: "Gather EP Related ACS Data"
author: "Rich Carder"
date: "February 13, 2020"
output: html_document
---
#install.packages("googlesheets4")
#install.packages("formattable")
#install.packages("htmltools")
#install.packages("geojsonio")
library(googlesheets4)
library(formattable)
library(kableExtra)
library(ggthemes)
library(knitr)
library(tidycensus)
library(htmltools)
library(webshot)
library(sf)
library(haven)
library(jsonlite)
library(geojsonio)
#This script extracts ACS 5-year estimates at the block group (or any larger
#geography) using the tidycensus package. To run tidycensus, you first need
#to set up a Census API key and run census_api_key(). Set working directory
#to where you want output files to save, or use the collect_acs_data function
#to set a different outpath.
#
setwd("C:/Users/rcarder/Documents/dev/AMBFHL")
survey_results<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())
library(dplyr)
nhl_raw<-nhl_raw%>%
mutate(id=row_number())
View(nhl_raw)
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")
library(dplyr)
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side"))
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")
---
install.packages("tidyverse")
library(tidyverse)
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")
View(nhl_raw)
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W","L"))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W","L"))
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" )))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Team",""))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Team",""))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Teams ",""))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Teams ",""))
games<-nhl_raw%>%
group_by(id)%>%
summarize(Away=paste(Team[side=="Away Team"],collapse=", "))
View(games)
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Teams ",""))%>%
mutate(Team=str_replace(Team,"[",""))%>%
mutate(Team=str_replace(Team,"]",""))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Teams ",""))%>%
mutate(Team=str_replace(Team,"[",""))%>%
mutate(Team=str_replace(Team,"]",""))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Teams [",""))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Teams ",""))
games<-nhl_raw%>%
group_by(id)%>%
summarize(Away=paste(Team[side=="Away Team"],collapse=", "))
View(games)
games<-nhl_raw%>%
group_by(id)%>%
summarize(Away=paste(Team[side=="Away Team"],collapse=", "),
Home=paste(Team[side=="Home Team"],collapse=", "))
games<-nhl_raw%>%
group_by(id)%>%
summarize(Away=paste(Team[side=="Away Team"],collapse=", "),
AwayScore=first(`Away Score`),
HomeScore=first(`Home Score`),
Home=paste(Team[side=="Home Team"],collapse=", "))
?googlesheets4
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Teams ",""))
games<-nhl_raw%>%
group_by(id)%>%
summarize(Away=paste(Team[side=="Away Team"],collapse=", "),
AwayScore=first(`Away Score`),
HomeScore=first(`Home Score`),
Home=paste(Team[side=="Home Team"],collapse=", "))
games<-nhl_raw%>%
filter(Timestamp>="2020-04-11 17:00:00")
games<-nhl_raw%>%
filter(Timestamp>=as.POSIXct("2020-04-11 17:00:00"))
games<-nhl_raw%>%
filter(Timestamp>=as.POSIXct("2020-04-11 12:00:00"))
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
nhl_raw<-nhl_raw%>%
mutate(id=row_number())%>%
pivot_longer(cols=starts_with("Teams"),
names_to="Player",
values_to="side")%>%
filter(!is.na(side))%>%
mutate(WL=ifelse(side=="Home Team"&`Home Score`>`Away Score`,"W",
ifelse(side=="Home Team"&`Home Score`<`Away Score`,"L",
ifelse(side=="Away Team"&`Home Score`<`Away Score`,"W","L" ))))%>%
mutate(Team=str_replace(Player,"Teams ",""))
games<-nhl_raw%>%
filter(Timestamp>=as.POSIXct("2020-04-11 12:00:00"))
games<-nhl_raw%>%
filter(Timestamp>=as.POSIXct("2020-04-11 12:00:00"))%>%
group_by(id)%>%
summarize(Away=paste(Team[side=="Away Team"],collapse=", "),
AwayScore=first(`Away Score`),
HomeScore=first(`Home Score`),
Home=paste(Team[side=="Home Team"],collapse=", "))
write_sheet(games, ss = "https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1910726882", sheet = NULL)
#install.packages("googlesheets4")
#install.packages("formattable")
#install.packages("htmltools")
#install.packages("geojsonio")
library(googlesheets4)
write_sheet(games, ss = "https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1910726882", sheet = NULL)
googlesheets4::write_sheet(games, ss = "https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1910726882", sheet = NULL)
googlesheets4::sheets_write(games, ss = "https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1910726882", sheet = NULL)
sheets_write(games, ss = "https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1910726882", sheet = NULL)
#install.packages("googlesheets4")
#install.packages("formattable")
#install.packages("htmltools")
#install.packages("geojsonio")
library(googlesheets4)
sheets_write(games, ss = "https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1910726882", sheet = NULL)
nhl_raw<-read_sheet("https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1609610797")
sheet_write(games, ss = "https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1910726882", sheet = NULL)
write_sheet(games, ss = "https://docs.google.com/spreadsheets/d/1hkVB4eg3x_jTpcbxqyRVuGmie4AnrNifczxVdi_wum4/edit#gid=1910726882", sheet = NULL)
install.packages("googlesheets4")
install.packages("googlesheets4")
---
# install.packages("tidyverse")
#install.packages("googlesheets4")
#install.packages("googlesheets4")
#install.packages("formattable")
#install.packages("htmltools")
#install.packages("geojsonio")
library(googlesheets4)
---
# install.packages("tidyverse")
#install.packages("googlesheets4")
#install.packages("googlesheets4")
#install.packages("formattable")
#install.packages("htmltools")
#install.packages("geojsonio")
library(googlesheets4)
---
# install.packages("tidyverse")
#install.packages("googlesheets4")
#install.packages("googlesheets4")
#install.packages("formattable")
#install.packages("htmltools")
#install.packages("geojsonio")
library(googlesheets4)
